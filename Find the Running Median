#include <iostream>
#include <queue>
#include <stack>
#include <algorithm>
#include<cstdio>
#include<vector>
#include<set>
#include<map>
#include<string>
#include <ext/pb_ds/assoc_container.hpp>
#include <ext/pb_ds/tree_policy.hpp>
using namespace __gnu_pbds;

#define ordered_set tree <pair<int,int> ,null_type,less <pair<int,int> >, rb_tree_tag,tree_order_statistics_node_update>

using namespace std;
int main() {
	ios_base::sync_with_stdio(0), cin.tie(0), cout.tie(0);
	int n;
	cin >> n;
	ordered_set s;
	for(int i=0;i<n;i++){
		int x;
		cin>>x;
		s.insert({x,i});
		if(s.size()%2==1){
			double res=(s.find_by_order(s.size()/2)->first);
			cout<<1.0*res<<"\n";
		}
		else{
			int ind1=s.find_by_order(s.size()/2)->first;
	     	int ind2=s.find_by_order(s.size()/2-1)->first;
	     	double sum=ind1+ind2;
	     	cout<<sum*1.0/2.0<<"\n";
		}
	}
	return 0;
}
